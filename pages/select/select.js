Page({

  /**
   * 页面的初始数据
   */
  data: {
    //上面是废弃部分，是之前的思路。以数组形式拆分嵌套数组
    // array: [{ 1: 10, 2: 10, 3: -50, 4: -50, 5: -100, 6: -50, 7: 30, 8: 50, 9: 50, 10: 0, 11: 0, 12: 30, name: '初中以下' },
    //         { 1: 20, 2: 20, 3: 0, 4: 0, 5: -50, 6: 10, 7: 30, 8: 50, 9: 50, 10: 0, 11: 0, 12: 30, name: '高中' },
    //         { 1: 30, 2: 30, 3: 30, 4: 30, 5: 30, 6: 30, 7: 30, 8: 30, 9: 50, 10: 0, 11: 0, 12: 30, name: '大专' },
    //         { 1: 30, 2: 30, 3: 40, 4: 40, 5: 40, 6: 40, 7: 40, 8: 40, 9: 30, 10: 0, 11: 0, 12: 40, name: '本科' },
    //         { 1: 30, 2: 30, 3: 50, 4: 50, 5: 50, 6: 30, 7: 50, 8: 30, 9: -30, 10: 0, 11: 0, 12: 50, name: '硕士' },
    //         { 1: 50, 2: 50, 3: 50, 4: 50, 5: 50, 6: 30, 7: 50, 8: 30, 9: -30, 10: 0, 11: 0, 12: 50, name: '博士' }],
    // sex: [{ 1: 50, 2: 50, 3: 50, 4: 50, 5: 50, 6: 50, 7: 50, 8: 50, 9: 30, 10: 0, 11: 0, 12: 50, name: '男' },
    //       { 1: 50, 2: 50, 3: 30, 4: 30, 5: 10, 6: -30, 7: 50, 8: 50, 9: 50, 10: 0, 11: 0, 12: 50, name: '女' }],
    // age: [{ 1: 5, 2: 5, 3: 0, 4: 0, 5: -50, 6: 15, 7: 20, 8: 30, 9: 30, 10: 0, 11: 0, 12: 20, name: '18岁以下' },
    //       { 1: 20, 2: 20, 3: 20, 4: 20, 5: 20, 6: 20, 7: 20, 8: 20, 9: 20, 10: 0, 11: 0, 12: 20, name: '18~24岁' },
    //       { 1: 20, 2: 20, 3: 20, 4: 20, 5: 20, 6: 20, 7: 20, 8: 20, 9: 20, 10: 0, 11: 0, 12: 20, name: '25~30岁' },
    //       { 1: 10, 2: 10, 3: 10, 4: 10, 5: 0, 6: 10, 7: 40, 8: 0, 9: 0, 10: 0, 11: 0, 12: 40, name: '30岁以上' }],
    // base: [{ 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 10, 8: 20, 9: 30, 10: 0, 11: 0, 12: 10, name: '零基础' },
    //        { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 50, 8: 50, 9: 0, 10: 0, 11: 0, 12: 50, name: '绘画基础' },
    //        { 1: 10, 2: 10, 3: 10, 4: 10, 5: 10, 6: 50, 7: 0, 8: 0, 9: 30, 10: 0, 11: 0, 12: 0, name: '网络相关' },
    //        { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 50, 8: 50, 9: 50, 10: 0, 11: 0, 12: 50, name: '原型设计' }],
    // major: [{ 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 30, 8: 50, 9: 50, 10: 0, 11: 0, 12: 30, name: '无专业' },
    //         { 1: 40, 2: 40, 3: 40, 4: 40, 5: 50, 6: 40, 7: 40, 8: 40, 9: 30, 10: 0, 11: 0, 12: 40, name: '计算机相关' },
    //         { 1: 30, 2: 30, 3: 35, 4: 35, 5: 40, 6: 30, 7: 30, 8: 30, 9: 30, 10: 0, 11: 0, 12: 30, name: '理工科' },
    //         { 1: 10, 2: 10, 3: 10, 4: 10, 5: 10, 6: 10, 7: 50, 8: 50, 9: 30, 10: 0, 11: 0, 12: 50, name: '文科' }],
    // logic: [{ 1: 10, 2: 10, 3: 10, 4: 10, 5: 10, 6: 10, 7: 50, 8: 50, 9: 50, 10: 0, 11: 0, 12: 50, name: '渣渣' },
    //         { 1: 30, 2: 30, 3: 30, 4: 30, 5: 30, 6: 30, 7: 30, 8: 30, 9: 30, 10: 0, 11: 0, 12: 30, name: '普通' },
    //         { 1: 40, 2: 40, 3: 40, 4: 40, 5: 50, 6: 40, 7: 30, 8: 0, 9: 0, 10: 0, 11: 0, 12: 30, name: '卓越' }],
    //下面是按官网封装的组件里的分数版，从嵌套数组中取值
    score :[
      {
        option: [
          { 1: 10, 2: 10, 3: -50, 4: -50, 5: -100, 6: -50, 7: 30, 8: 50, 9: 50, 10: 0, 11: 0, 12: 30, name: '初中以下' },
          { 1: 20, 2: 20, 3: 0, 4: 0, 5: -50, 6: 10, 7: 30, 8: 50, 9: 50, 10: 0, 11: 0, 12: 30, name: '高中' },
          { 1: 30, 2: 30, 3: 30, 4: 30, 5: 30, 6: 30, 7: 30, 8: 30, 9: 50, 10: 0, 11: 0, 12: 30, name: '大专' },
          { 1: 30, 2: 30, 3: 40, 4: 40, 5: 40, 6: 40, 7: 40, 8: 40, 9: 30, 10: 0, 11: 0, 12: 40, name: '本科' },
          { 1: 30, 2: 30, 3: 50, 4: 50, 5: 50, 6: 30, 7: 50, 8: 30, 9: -30, 10: 0, 11: 0, 12: 50, name: '硕士' },
          { 1: 50, 2: 50, 3: 50, 4: 50, 5: 50, 6: 30, 7: 50, 8: 30, 9: -30, 10: 0, 11: 0, 12: 50, name: '博士' }
        ],
        name: '学　　历：'
      },
      {
        option: [
          { 1: 50, 2: 50, 3: 50, 4: 50, 5: 50, 6: 50, 7: 50, 8: 50, 9: 30, 10: 0, 11: 0, 12: 50, name: '男' },
          { 1: 50, 2: 50, 3: 30, 4: 30, 5: 10, 6: -30, 7: 50, 8: 50, 9: 50, 10: 0, 11: 0, 12: 50, name: '女' }
        ],
        name: '性　　别：'
      },
      {
        option: [
          { 1: 5, 2: 5, 3: 0, 4: 0, 5: -50, 6: 15, 7: 20, 8: 30, 9: 30, 10: 0, 11: 0, 12: 20, name: '18岁以下' },
          { 1: 20, 2: 20, 3: 20, 4: 20, 5: 20, 6: 20, 7: 20, 8: 20, 9: 20, 10: 0, 11: 0, 12: 20, name: '18~24岁' },
          { 1: 20, 2: 20, 3: 20, 4: 20, 5: 20, 6: 20, 7: 20, 8: 20, 9: 20, 10: 0, 11: 0, 12: 20, name: '25~30岁' },
          { 1: 10, 2: 10, 3: 10, 4: 10, 5: 0, 6: 10, 7: 40, 8: 0, 9: 0, 10: 0, 11: 0, 12: 40, name: '30岁以上' }
        ],
        name: '年　　龄：'
      },
      {
        option: [
          { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 10, 8: 20, 9: 30, 10: 0, 11: 0, 12: 10, name: '零基础' },
          { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 50, 8: 50, 9: 0, 10: 0, 11: 0, 12: 50, name: '绘画基础' },
          { 1: 10, 2: 10, 3: 10, 4: 10, 5: 10, 6: 50, 7: 0, 8: 0, 9: 30, 10: 0, 11: 0, 12: 0, name: '网络相关' },
          { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 50, 8: 50, 9: 50, 10: 0, 11: 0, 12: 50, name: '原型设计' }
        ],
        name: '基　　础：'
      },
      {
        option: [
          { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 30, 8: 50, 9: 50, 10: 0, 11: 0, 12: 30, name: '无专业' },
          { 1: 40, 2: 40, 3: 40, 4: 40, 5: 50, 6: 40, 7: 40, 8: 40, 9: 30, 10: 0, 11: 0, 12: 40, name: '计算机相关' },
          { 1: 30, 2: 30, 3: 35, 4: 35, 5: 40, 6: 30, 7: 30, 8: 30, 9: 30, 10: 0, 11: 0, 12: 30, name: '理工科' },
          { 1: 10, 2: 10, 3: 10, 4: 10, 5: 10, 6: 10, 7: 50, 8: 50, 9: 30, 10: 0, 11: 0, 12: 50, name: '文科' }
        ],
        name: '专　　业：'
      },
      {
        option: [
          { 1: 10, 2: 10, 3: 10, 4: 10, 5: 10, 6: 10, 7: 50, 8: 50, 9: 50, 10: 0, 11: 0, 12: 50, name: '渣渣' },
          { 1: 30, 2: 30, 3: 30, 4: 30, 5: 30, 6: 30, 7: 30, 8: 30, 9: 30, 10: 0, 11: 0, 12: 30, name: '普通' },
          { 1: 40, 2: 40, 3: 40, 4: 40, 5: 50, 6: 40, 7: 30, 8: 0, 9: 0, 10: 0, 11: 0, 12: 30, name: '卓越' }
        ],
        name: '逻　　辑：'
      }
    ],
    // index:0,
    // sindex:0,
    // aindex:0,
    // bindex:0,
    // mindex:0,
    // lindex:0,
    //定义取值下标
    logs: [{Index:0},
      {Index:0},
      {Index:0},
      {Index:0},
      {Index:0},
      {Index:0},],
    select: ['Picker', 'Sex', 'Age', 'Base', 'Major', 'Logic'],
  },
  //这些都是picker改变时触发，更改当前picker显示内容
  bindPickerChange: function(e) {
    console.log(e.detail.value);
    var str = 'logs[0].Index';
    this.setData({
      [str]:e.detail.value,
    })
  },
  bindSexChange: function(e) {
    var str = 'logs[1].Index';
    this.setData({
      [str]:e.detail.value
    })
  },
  bindAgeChange: function (e) {
    var str = 'logs[2].Index';
    this.setData({
      [str]: e.detail.value
    })
  },
  bindBaseChange: function (e) {
    var str = 'logs[3].Index';
    this.setData({
      [str]: e.detail.value
    })
  },
  bindMajorChange: function (e) {
    var str = 'logs[4].Index';
    this.setData({
      [str]: e.detail.value
    })
  },
  bindLogicChange: function (e) {
    var str = 'logs[5].Index';
    this.setData({
      [str]: e.detail.value
    })
  },
  bindRecommend: function(e) {
    // var score = [0,0,0,0,0,0,0,0,0,-1000,-1000,1]; //之前偷懒时的做法，定义初始分数
    var score1 = {0:0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: -1000, 10: -1000, 11: 1 };//正确的定义各职业初始分数
    // 0css 1js 2android 3ios 4java 5op 6pm 7ui  8 QA 9 求职辅导 10 python 11 运营 
    var data1 = this.data.score;
    var data2 = this.data.logs;
    //前一种做法，将对象分数遍历进数组，偷懒的做法
    // for (let i = 0; i < 12; i++) { 
    //   score[i] = + data1[0].option[data2[0].Index][i + 1] + data1[1].option[data2[1].Index][i + 1] + data1[2].option[data2[2].Index][i + 1] + data1[3].option[data2[3].Index][i + 1] + data1[4].option[data2[4].Index][i + 1] + data1[5].option[data2[5].Index][i + 1]
    // } 
    for (let i = 0; i < 12; i++) {
      score1[i] +=  data1[0].option[data2[0].Index][i+1] + data1[1].option[data2[1].Index][i+1] + data1[2].option[data2[2].Index][i+1] + data1[3].option[data2[3].Index][i+1] + data1[4].option[data2[4].Index][i+1] + data1[5].option[data2[5].Index][i+1]
    }
    var score2 = Object.keys(score1).sort(function (a, b) { return score1[a] - score1[b] });//现在的做法，按value值升序排序对象key值组成数组
    //之前的做法，升序排序数组，然后取最后三个值
    // var scoreobj = [];
    // for (let i = 0; i < score.length; i++) {
    //   scoreobj[i] = [i, score[i]]
    // };
    // scoreobj.sort((a, b) => {
    //   return a[1] - b[1]
    // });
    // var send = [scoreobj[scoreobj.length - 1][0], scoreobj[scoreobj.length - 2][0], scoreobj[scoreobj.length - 3][0]];
    var sends = [score2[score2.length - 1], score2[score2.length - 2],score2[score2.length - 3]];//取数组中最后三个
    wx.navigateTo({//跳转页面，并将值传递
      url: `../main/main?one=${sends[0]}&&two=${sends[1]}&&three=${sends[2]}`,
    });
  },
  // clicks: function () {
  //   console.log(1);
  //   this.getdata();
    
  // },
  // getdata:function(){ //定义函数名称
  //   var that = this;  //这个地方很重要，重置data{}里数据的时候setData方法的this，如果下面success里直接写this就变成wx.request()的this了
    
  //   wx.request({
  //     url: 'http://www.phonegap100.com/appapi.php?a=getPortalCate',//请求地址
  //     data:{ //发给后端的数据
  //       name:"bella",
  //       age:20
  //     },
  //     header:{
  //       "Content-Type":"applciation/json"
  //     },
  //     method:"GET",
  //     success:function(res){
  //       console.log(res.data);
  //       that.setData({
  //         logs:res.data.result
  //       })
  //     },
  //     fail:function(err){
  //       console.log("error")
  //     },
  //     complete:function(){
  //       console.log("err")
  //     },
  //   })
  // },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {
    
  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {
    
  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {
    
  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {
    
  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {
    
  }
})